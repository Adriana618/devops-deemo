name: Deploy API

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: build-main-api
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build, tag, and push image to Docker Hub
        run: |
          docker build . --file docker-conf/Dockerfile-django-api --tag ${{ secrets.DOCKER_REGISTRY }}/algova-django-api:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_REGISTRY }}/algova-django-api:${GITHUB_SHA::7}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    name: deploy-main-api
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Configure access to Kubernetes cluster
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          helm upgrade --install ${{ secrets.RELEASE_NAME }} \
            --set image.repository="${{ secrets.DOCKER_REGISTRY }}/algova-django-api" \
            --set image.tag="${GITHUB_SHA::7}" \
            --set secrets.DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" \
            --set secrets.DJANGO_ALLOWED_HOSTS="${{ secrets.DJANGO_ALLOWED_HOSTS }}" \
            --set secrets.CERTIFICATE_ID="${{ secrets.CERTIFICATE_ID }}" \
            --set secrets.DOCKER_REGISTRY="${{ secrets.DOCKER_REGISTRY }}" \
            --create-namespace --namespace=default ./devops-deemo
          kubectl set image deployment/algova-django-api algova-django-api=${{ secrets.DOCKER_REGISTRY }}/algova-django-api:${GITHUB_SHA::7} --namespace=default
          kubectl rollout status deployment/algova-django-api --namespace=default
          kubectl wait --for=condition=available --timeout=300s --namespace=default deployment/algova-django-api
          kubectl get pods -l app=algova-django-api --namespace=default
          sleep 10 # Wait for previous pod to terminate
          kubectl exec --namespace=default \
          $(kubectl get pod -l app=algova-django-api --field-selector=status.phase==Running -o jsonpath="{.items[0].metadata.name}" --namespace=default) \
          -- python manage.py makemigrations
          kubectl exec --namespace=default \
          $(kubectl get pod -l app=algova-django-api --field-selector=status.phase==Running -o jsonpath="{.items[0].metadata.name}" --namespace=default) \
          -- python manage.py migrate
